if OSX() && has("gui_running")
    set guifont=Monaco:h13,Andale\ Mono\ Regular:h12,Menlo\ Regular:h11,Consolas\ Regular:h12,Courier\ New\ Regular:h14
endif

"neocomplete
let g:neocomplete#use_vimproc = 1
let g:neocomplete#data_directory='~/.cache/neocomplete'
let g:neocomplete#enable_fuzzy_completion = 1
let g:neocomplete#force_omni_input_patterns = {}
"let g:neocomplete#sources#omni#input_patterns.php = '[^. \t]->\h\w*\|\h\w*::'
let g:neocomplete#sources#omni#input_patterns.php = '\h\w*\|[^. \t]->\%(\h\w*\)\?\|\h\w*::\%(\h\w*\)\?'
"let g:neocomplete#sources#omni#input_patterns.php = '\h\w*\|[^. \t]->\w*::'
"let g:neocomplete#force_omni_input_patterns.php = '\h\w*\|[^- \t]->\w*'

autocmd FileType python setlocal omnifunc=jedi#completions
let g:jedi#completions_enabled = 0
let g:jedi#auto_vim_configuration = 0
let g:jedi#smart_auto_mappings = 0
let g:neocomplete#force_omni_input_patterns.python = '\%([^. \t]\.\|^\s*@\|^\s*from\s.\+import \|^\s*from \|^\s*import \)\w*'
" alternative pattern: '\h\w*\|[^. \t]\.\w*'

"padawan.vim
let $PATH=$PATH . ':' . expand('~/.composer/vendor/bin')
let g:padawan#composer_command = 'composer'

set clipboard+=unnamedplus
set nospell

" 禁止ctrlp自动忽略隐藏目录和文件
let g:ctrlp_dotfiles = 1

"PHP
"let g:phpcomplete_index_composer_command="composer"
let g:DisableAutoPHPFolding = 1
autocmd FileType php setlocal omnifunc=phpcomplete#CompletePHP
"autocmd FileType php setlocal completefunc=phpcomplete_extended#CompletePHP
"autocmd FileType php setlocal softtabstop=4 tabstop=4 shiftwidth=4

" supertab
let g:SuperTabDefaultCompletionType = "<c-n>"

let g:airline#extensions#tabline#show_buffers = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#buffer_nr_show = 1

" YCM settings
"let g:ycm_min_num_of_chars_for_completion = 1
"let g:ycm_add_preview_to_completeopt = 0
"let g:ycm_autoclose_preview_window_after_completion = 1
"let g:ycm_key_list_select_completion = ['<TAB>', '<Down>', '<Enter>']
"let g:ycm_error_symbol = 'ER'
"let g:ycm_warning_symbol = 'WR'
"let g:ycm_key_invoke_completion = "<D-Space>"
"let g:ycm_cache_omnifunc = 0
" 映射YCM vim-go跳转
"nmap <F3> :YcmCompleter GoToDefinitionElseDeclaration<CR>

":map <M-s> :w<kEnter>  "Works in normal mode, must press Esc first"
":imap <M-s> <Esc>:w<kEnter>i "Works in insert mode, saves and puts back in insert mode"

" golang 配置
au FileType go nmap <F3> :GoDef<CR>
au FileType go nmap <F4> :GoDoc<CR>
au FileType go nmap <F6> :GoRename<CR>
au FileType go nmap <Leader>i <Plug>(go-info)
au FileType go nmap <Leader>e <Plug>(go-rename)

let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_structs = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1
let g:go_fmt_command = "goimports"
let g:go_fmt_autosave = 1

"map [count]<C-/> <Plug>NERDComToggleComment<CR>
"map [count]<C-/> NERDComToggleComment<CR>

"git clone https://github.com/nevernet/molokai
" move molokai/colors/molokai.vim to ~/.vim/colors
colorscheme molokai
let g:molokai_original = 1
let g:rehash256 = 1


"Unite
nnoremap <c-r> :Unite outline<CR>
nnoremap <c-b> :Unite buffer<CR>
nnoremap <c-f> :Unite file buffer<CR>

"VimFiler
:let g:vimfiler_as_default_explorer = 1
let g:vimfiler_ignore_pattern = ['^\.git$', '^\.DS_Store$', '^\.idea']
nnoremap <c-e> :VimFilerExplorer<CR>

"buffer
nnoremap <c-w> :bd<CR>
map <C-l> :bn<CR>
map <C-h> :bp<CR>
map <Tab> :bn<CR>
inoremap jk <esc>





